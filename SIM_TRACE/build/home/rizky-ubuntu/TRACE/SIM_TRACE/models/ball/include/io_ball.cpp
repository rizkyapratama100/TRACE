/**
 * This file was automatically generated by the ICG based on the file:
 * /home/rizky-ubuntu/TRACE/SIM_TRACE/models/ball/include/ball.h
 * This file contains database parameter declarations specific to the
 * data structures and enumerated types declared in the above file.
 * These database parameters are used by the Trick input and
 * data recording processors to gain access to important simulation
 * variable information.
 */

#define TRICK_IN_IOSRC
#include <stdlib.h>
#include "trick/MemoryManager.hh"
#include "trick/attributes.h"
#include "trick/parameter_types.h"
#include "trick/ClassSizeCheck.hh"
#include "trick/UnitsMap.hh"
#include "trick/checkpoint_stl.hh"
#include "/home/rizky-ubuntu/TRACE/SIM_TRACE/models/ball/include/ball.h"

extern "C" {

ATTRIBUTES attrBALL[] = {
{"vel0", "double", "m", "", "",
  "Init velocity of ball",
  10,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  0, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"pos0", "double", "m", "", "",
  "Init position of ball",
  10,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  16, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"acc", "double", "m/s2", "", "",
  "xy-acceleration",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  32, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"vel", "double", "m/s", "", "",
  "xy-velocity",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  48, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"pos", "double", "m", "", "",
  "xy-position",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  64, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"time", "double", "s", "", "",
  "Model time",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  80, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"tiltrate", "double", "m/s^3", "", "",
  "derivative of acceleration, abstract approximation of tiltrate",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  88, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"motor", "double", "are", "", "",
  "we moving or not",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  104, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"


void init_attrBALL() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

}

extern "C" {

void init_attrBALL_c_intf() {
    init_attrBALL() ;
}

size_t io_src_sizeof_BALL() {
    return sizeof(BALL) ;
}

void* io_src_allocate_BALL(int num) {
    BALL* temp = (BALL*)calloc(num, sizeof(BALL));
    return (void*)temp;
}

void io_src_destruct_BALL(void* address __attribute__((unused)), int num __attribute__((unused))) {
}

void io_src_delete_BALL(void* address __attribute__((unused))) {}

} //extern "C"

struct UnitsMapBALL {
    UnitsMapBALL() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("BALL_vel0", "m") ;
        units_map_ptr->add_param("BALL_pos0", "m") ;
        units_map_ptr->add_param("BALL_acc", "m/s2") ;
        units_map_ptr->add_param("BALL_vel", "m/s") ;
        units_map_ptr->add_param("BALL_pos", "m") ;
        units_map_ptr->add_param("BALL_time", "s") ;
        units_map_ptr->add_param("BALL_tiltrate", "m/s^3") ;
        units_map_ptr->add_param("BALL_motor", "are") ;
    }
} umBALL;

